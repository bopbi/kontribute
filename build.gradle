plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.0'
    id 'com.apollographql.apollo' version'2.3.0'
}

group 'com.bobbyprabowo'
version '3.0.3'

repositories {
    mavenCentral()
}

apollo {
    // instruct the compiler to generate Kotlin models
    generateKotlinModels.set(true)
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.0"
    implementation("com.apollographql.apollo:apollo-rx3-support:2.3.0")
    implementation 'org.apache.poi:poi-ooxml:3.9'
    implementation 'io.github.url-detector:url-detector:0.1.23'
    implementation 'com.charleskorn.kaml:kaml:0.20.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.0-RC'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes 'Main-Class': 'com.bobbyprabowo.kontribute.Kontribute'
    }

    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    archivesBaseName = project.name + '-all'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}
